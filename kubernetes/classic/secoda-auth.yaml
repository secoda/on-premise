apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: auth
  labels:
    io.kompose.service: auth
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      io.kompose.service: auth
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: auth
    spec:
      containers:
        - env:
            - name: KC_DB_USERNAME
              value: postgres
            - name: KC_DB
              value: postgres
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secodasecrets
                  key: auth_db_password
            - name: KC_DB_URL
              valueFrom:
                secretKeyRef:
                  name: secodasecrets
                  key: auth_db_url
            - name: KEYCLOAK_SECRET
              valueFrom:
                secretKeyRef:
                  name: secodasecrets
                  key: keycloak_secret
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secodasecrets
                  key: keycloak_admin_password
          image: secoda/on-premise-auth:5
          args:
            [
              "start --auto-build --http-relative-path /auth --hostname-strict false --proxy edge --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true --import-realm",
            ]
          name: api
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: 2048M
            requests:
              cpu: 200m
              memory: 1024M
      restartPolicy: Always
      imagePullSecrets:
        - name: secoda-dockerhub
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: auth
  labels:
    io.kompose.service: auth
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: auth
